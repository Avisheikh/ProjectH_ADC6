Explain GitBasics command are as follow:

Git clone: 
    It is a Git command line utility which is used to target an existing 
    repository and create a clone, or copy of the target repository.

Git push:
    The git push command is used to upload local repository content to 
    a remote repository. Pushing is how you transfer commits from your 
    local repository to a remote repo. It's the counterpart to git fetch
    ,but whereas fetching imports commits to local branches, pushing 
    exports commits to remote branches.

Git pull:
    The git pull command is used to fetch and download content from a 
    remote repository and immediately update the local repository to 
    match that content. Merging remote upstream changes into your local 
    repository is a common task in Git-based collaboration work flows.
    The git pull command is actually a combination of two other 
    commands, git fetch followed by git merge. In the first stage 
    of operation git pull will execute a git fetch scoped to the 
    local branch that HEAD is pointed at. Once the content is 
    downloaded, git pull will enter a merge workflow. A new merge 
    commit will be-created and HEAD updated to point at the new commit.

Merge Conflict:
    Merge conflicts occur when competing changes are made to the same 
    line of a file, or when one person edits a file and another person 
    deletes the same file. For more information, see "About merge
    conflicts."

Git branches:
    A branch in Git is simply a lightweight movable pointer to one of 
    these commits. The default branch name in Git is master . As you 
    start making commits, you're given a master branch that points to 
    the last commit you made. Every time you commit, the master branch
    pointer moves forward automatically.

Git commit:
    The "commit" command is used to save your changes to the local 
    repository. Note that you have to explicitly tell Git which changes
    you want to include in a commit before running the "git commit" 
    command. This means that a file won't be automatically included 
    in the next commit just because it was changed. Instead, you need 
    to use the "git add" command to mark the desired changes for 
    inclusion.